generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  username      String    @unique
  password      String
  createdAt     DateTime  @default(now())
  messages      Message[]
  conversations ConversationUser[]
}

model Message {
  id              Int           @id @default(autoincrement())
  content         String
  createdAt       DateTime      @default(now())
  senderId        Int
  sender          User          @relation(fields: [senderId], references: [id])
  conversationId  Int
  conversation    Conversation  @relation(fields: [conversationId], references: [id])
}


model Conversation {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  participants  ConversationUser[]
  message       Message[]
}

model ConversationUser {
  id              Int           @id @default(autoincrement())
  userId          Int
  user            User          @relation(fields: [userId], references: [id])
  conversationId  Int
  conversation    Conversation  @relation(fields: [conversationId], references: [id])
}

//Example Breakdown with User1, User2, and User3:
// 1-on-1 Conversations:

// When User1 starts a conversation with User2, a new Conversation record is created.
// Two ConversationUser entries are created:
  // { userId: 1, conversationId: X }
  // { userId: 2, conversationId: X }

// Group Chat with All Users:
  // When User1, User2, and User3 join a group conversation:
  // A new Conversation is created for the group.
  // Three ConversationUser entries are created:
  // { userId: 1, conversationId: Y }
  // { userId: 2, conversationId: Y }
  // { userId: 3, conversationId: Y }